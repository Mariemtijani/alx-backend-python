pipeline {
    agent any

    environment {
        VENV = 'venv'
        IMAGE_NAME = 'mariemtijani60735/messaging_app'
    }

    stages {
        stage('Clone Repo') {
            steps {
                sh 'git branch'
                git credentialsId: '24a6edd8-5863-4cdd-b2c9-e1b9a2ffe57c', url: 'https://github.com/Mariemtijani/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'python3 -m venv $VENV'
                sh './$VENV/bin/pip3 install --upgrade pip'
                sh './$VENV/bin/pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh './$VENV/bin/pytest --maxfail=1 --disable-warnings -q > report.txt'
            }
        }

        stage('Archive Report') {
            steps {
                archiveArtifacts artifacts: 'report.txt', fingerprint: true
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('messaging_app') {
                    sh "docker build -t $IMAGE_NAME ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                    sh "docker push $IMAGE_NAME"
                }
            }
        }
    }
}
